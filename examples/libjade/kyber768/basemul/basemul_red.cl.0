proc main (L0x7fffffffd8b0, L0x7fffffffd8b2, L0x7fffffffd8b4, L0x7fffffffd8b6, L0x7fffffffd8b8, L0x7fffffffd8ba, L0x7fffffffd8bc, L0x7fffffffd8be, L0x7fffffffd8c0, L0x7fffffffd8c2, L0x7fffffffd8c4, L0x7fffffffd8c6, L0x7fffffffd8c8, L0x7fffffffd8ca, L0x7fffffffd8cc, L0x7fffffffd8ce, L0x7fffffffd8d0, L0x7fffffffd8d2, L0x7fffffffd8d4, L0x7fffffffd8d6, L0x7fffffffd8d8, L0x7fffffffd8da, L0x7fffffffd8dc, L0x7fffffffd8de, L0x7fffffffd8e0, L0x7fffffffd8e2, L0x7fffffffd8e4, L0x7fffffffd8e6, L0x7fffffffd8e8, L0x7fffffffd8ea, L0x7fffffffd8ec, L0x7fffffffd8ee, L0x7fffffffd8f0, L0x7fffffffd8f2, L0x7fffffffd8f4, L0x7fffffffd8f6, L0x7fffffffd8f8, L0x7fffffffd8fa, L0x7fffffffd8fc, L0x7fffffffd8fe, L0x7fffffffd900, L0x7fffffffd902, L0x7fffffffd904, L0x7fffffffd906, L0x7fffffffd908, L0x7fffffffd90a, L0x7fffffffd90c, L0x7fffffffd90e, L0x7fffffffd910, L0x7fffffffd912, L0x7fffffffd914, L0x7fffffffd916, L0x7fffffffd918, L0x7fffffffd91a, L0x7fffffffd91c, L0x7fffffffd91e, L0x7fffffffd920, L0x7fffffffd922, L0x7fffffffd924, L0x7fffffffd926, L0x7fffffffd928, L0x7fffffffd92a, L0x7fffffffd92c, L0x7fffffffd92e, L0x7fffffffd930, L0x7fffffffd932, L0x7fffffffd934, L0x7fffffffd936, L0x7fffffffd938, L0x7fffffffd93a, L0x7fffffffd93c, L0x7fffffffd93e, L0x7fffffffd940, L0x7fffffffd942, L0x7fffffffd944, L0x7fffffffd946, L0x7fffffffd948, L0x7fffffffd94a, L0x7fffffffd94c, L0x7fffffffd94e, L0x7fffffffd950, L0x7fffffffd952, L0x7fffffffd954, L0x7fffffffd956, L0x7fffffffd958, L0x7fffffffd95a, L0x7fffffffd95c, L0x7fffffffd95e, L0x7fffffffd960, L0x7fffffffd962, L0x7fffffffd964, L0x7fffffffd966, L0x7fffffffd968, L0x7fffffffd96a, L0x7fffffffd96c, L0x7fffffffd96e) =
{
  true
  &&
  true
}

(* #! -> SP = 0x7fffffffd868 *)
#! 0x7fffffffd868 = 0x7fffffffd868;
(* vmovdqu (%rsi),%ymm2                            #! EA = L0x7fffffffd8b0; Value = 0x0000038000000380; PC = 0x5555555551c0 *)
mov ymm2_0000 L0x7fffffffd8b0;
mov ymm2_0001 L0x7fffffffd8b2;
mov ymm2_0010 L0x7fffffffd8b4;
mov ymm2_0011 L0x7fffffffd8b6;
mov ymm2_0100 L0x7fffffffd8b8;
mov ymm2_0101 L0x7fffffffd8ba;
mov ymm2_0110 L0x7fffffffd8bc;
mov ymm2_0111 L0x7fffffffd8be;
mov ymm2_1000 L0x7fffffffd8c0;
mov ymm2_1001 L0x7fffffffd8c2;
mov ymm2_1010 L0x7fffffffd8c4;
mov ymm2_1011 L0x7fffffffd8c6;
mov ymm2_1100 L0x7fffffffd8c8;
mov ymm2_1101 L0x7fffffffd8ca;
mov ymm2_1110 L0x7fffffffd8cc;
mov ymm2_1111 L0x7fffffffd8ce;
(* vmovdqu 0x20(%rsi),%ymm3                        #! EA = L0x7fffffffd8d0; Value = 0x0000000000000000; PC = 0x5555555551c4 *)
mov ymm3_0000 L0x7fffffffd8d0;
mov ymm3_0001 L0x7fffffffd8d2;
mov ymm3_0010 L0x7fffffffd8d4;
mov ymm3_0011 L0x7fffffffd8d6;
mov ymm3_0100 L0x7fffffffd8d8;
mov ymm3_0101 L0x7fffffffd8da;
mov ymm3_0110 L0x7fffffffd8dc;
mov ymm3_0111 L0x7fffffffd8de;
mov ymm3_1000 L0x7fffffffd8e0;
mov ymm3_1001 L0x7fffffffd8e2;
mov ymm3_1010 L0x7fffffffd8e4;
mov ymm3_1011 L0x7fffffffd8e6;
mov ymm3_1100 L0x7fffffffd8e8;
mov ymm3_1101 L0x7fffffffd8ea;
mov ymm3_1110 L0x7fffffffd8ec;
mov ymm3_1111 L0x7fffffffd8ee;
(* vmovdqu (%rdx),%ymm4                            #! EA = L0x7fffffffd8f0; Value = 0x0000000000000000; PC = 0x5555555551c9 *)
mov ymm4_0000 L0x7fffffffd8f0;
mov ymm4_0001 L0x7fffffffd8f2;
mov ymm4_0010 L0x7fffffffd8f4;
mov ymm4_0011 L0x7fffffffd8f6;
mov ymm4_0100 L0x7fffffffd8f8;
mov ymm4_0101 L0x7fffffffd8fa;
mov ymm4_0110 L0x7fffffffd8fc;
mov ymm4_0111 L0x7fffffffd8fe;
mov ymm4_1000 L0x7fffffffd900;
mov ymm4_1001 L0x7fffffffd902;
mov ymm4_1010 L0x7fffffffd904;
mov ymm4_1011 L0x7fffffffd906;
mov ymm4_1100 L0x7fffffffd908;
mov ymm4_1101 L0x7fffffffd90a;
mov ymm4_1110 L0x7fffffffd90c;
mov ymm4_1111 L0x7fffffffd90e;
(* vmovdqu 0x20(%rdx),%ymm5                        #! EA = L0x7fffffffd910; Value = 0x0000000000000000; PC = 0x5555555551cd *)
mov ymm5_0000 L0x7fffffffd910;
mov ymm5_0001 L0x7fffffffd912;
mov ymm5_0010 L0x7fffffffd914;
mov ymm5_0011 L0x7fffffffd916;
mov ymm5_0100 L0x7fffffffd918;
mov ymm5_0101 L0x7fffffffd91a;
mov ymm5_0110 L0x7fffffffd91c;
mov ymm5_0111 L0x7fffffffd91e;
mov ymm5_1000 L0x7fffffffd920;
mov ymm5_1001 L0x7fffffffd922;
mov ymm5_1010 L0x7fffffffd924;
mov ymm5_1011 L0x7fffffffd926;
mov ymm5_1100 L0x7fffffffd928;
mov ymm5_1101 L0x7fffffffd92a;
mov ymm5_1110 L0x7fffffffd92c;
mov ymm5_1111 L0x7fffffffd92e;
(* vmovdqu (%rcx),%ymm0                            #! EA = L0x7fffffffd930; Value = 0x00000000000000c2; PC = 0x5555555551d2 *)
mov ymm0_0000 L0x7fffffffd930;
mov ymm0_0001 L0x7fffffffd932;
mov ymm0_0010 L0x7fffffffd934;
mov ymm0_0011 L0x7fffffffd936;
mov ymm0_0100 L0x7fffffffd938;
mov ymm0_0101 L0x7fffffffd93a;
mov ymm0_0110 L0x7fffffffd93c;
mov ymm0_0111 L0x7fffffffd93e;
mov ymm0_1000 L0x7fffffffd940;
mov ymm0_1001 L0x7fffffffd942;
mov ymm0_1010 L0x7fffffffd944;
mov ymm0_1011 L0x7fffffffd946;
mov ymm0_1100 L0x7fffffffd948;
mov ymm0_1101 L0x7fffffffd94a;
mov ymm0_1110 L0x7fffffffd94c;
mov ymm0_1111 L0x7fffffffd94e;
(* vmovdqu 0x20(%rcx),%ymm1                        #! EA = L0x7fffffffd950; Value = 0x00007ffff7fa72e8; PC = 0x5555555551d6 *)
mov ymm1_0000 L0x7fffffffd950;
mov ymm1_0001 L0x7fffffffd952;
mov ymm1_0010 L0x7fffffffd954;
mov ymm1_0011 L0x7fffffffd956;
mov ymm1_0100 L0x7fffffffd958;
mov ymm1_0101 L0x7fffffffd95a;
mov ymm1_0110 L0x7fffffffd95c;
mov ymm1_0111 L0x7fffffffd95e;
mov ymm1_1000 L0x7fffffffd960;
mov ymm1_1001 L0x7fffffffd962;
mov ymm1_1010 L0x7fffffffd964;
mov ymm1_1011 L0x7fffffffd966;
mov ymm1_1100 L0x7fffffffd968;
mov ymm1_1101 L0x7fffffffd96a;
mov ymm1_1110 L0x7fffffffd96c;
mov ymm1_1111 L0x7fffffffd96e;
(* vpxor  %ymm6,%ymm6,%ymm6                        #! PC = 0x5555555551db *)
mov ymm6_0000 0@sint16;
mov ymm6_0001 0@sint16;
mov ymm6_0010 0@sint16;
mov ymm6_0011 0@sint16;
mov ymm6_0100 0@sint16;
mov ymm6_0101 0@sint16;
mov ymm6_0110 0@sint16;
mov ymm6_0111 0@sint16;
mov ymm6_1000 0@sint16;
mov ymm6_1001 0@sint16;
mov ymm6_1010 0@sint16;
mov ymm6_1011 0@sint16;
mov ymm6_1100 0@sint16;
mov ymm6_1101 0@sint16;
mov ymm6_1110 0@sint16;
mov ymm6_1111 0@sint16;
(* vpblendw $0xaa,%ymm6,%ymm2,%ymm7                #! PC = 0x5555555551df *)
mov ymm7_0000 ymm2_0000;
mov ymm7_0001 ymm6_0001;
mov ymm7_0010 ymm2_0010;
mov ymm7_0011 ymm6_0011;
mov ymm7_0100 ymm2_0100;
mov ymm7_0101 ymm6_0101;
mov ymm7_0110 ymm2_0110;
mov ymm7_0111 ymm6_0111;
mov ymm7_1000 ymm2_1000;
mov ymm7_1001 ymm6_1001;
mov ymm7_1010 ymm2_1010;
mov ymm7_1011 ymm6_1011;
mov ymm7_1100 ymm2_1100;
mov ymm7_1101 ymm6_1101;
mov ymm7_1110 ymm2_1110;
mov ymm7_1111 ymm6_1111;
(* vpblendw $0xaa,%ymm6,%ymm3,%ymm8                #! PC = 0x5555555551e5 *)
mov ymm8_0000 ymm3_0000;
mov ymm8_0001 ymm6_0001;
mov ymm8_0010 ymm3_0010;
mov ymm8_0011 ymm6_0011;
mov ymm8_0100 ymm3_0100;
mov ymm8_0101 ymm6_0101;
mov ymm8_0110 ymm3_0110;
mov ymm8_0111 ymm6_0111;
mov ymm8_1000 ymm3_1000;
mov ymm8_1001 ymm6_1001;
mov ymm8_1010 ymm3_1010;
mov ymm8_1011 ymm6_1011;
mov ymm8_1100 ymm3_1100;
mov ymm8_1101 ymm6_1101;
mov ymm8_1110 ymm3_1110;
mov ymm8_1111 ymm6_1111;
(* vpsrld $0x10,%ymm2,%ymm2                        #! PC = 0x5555555551eb *)
mov ymm2_0000 ymm2_0001;
mov ymm2_0001 0@sint16;
mov ymm2_0010 ymm2_0011;
mov ymm2_0011 0@sint16;
mov ymm2_0100 ymm2_0101;
mov ymm2_0101 0@sint16;
mov ymm2_0110 ymm2_0111;
mov ymm2_0111 0@sint16;
mov ymm2_1000 ymm2_1001;
mov ymm2_1001 0@sint16;
mov ymm2_1010 ymm2_1011;
mov ymm2_1011 0@int16;
mov ymm2_1100 ymm2_1101;
mov ymm2_1101 0@sint16;
mov ymm2_1110 ymm2_1111;
mov ymm2_1111 0@sint16;
(* vpsrld $0x10,%ymm3,%ymm3                        #! PC = 0x5555555551f0 *)
mov ymm3_0000 ymm3_0001;
mov ymm3_0001 0@sint16;
mov ymm3_0010 ymm3_0011;
mov ymm3_0011 0@sint16;
mov ymm3_0100 ymm3_0101;
mov ymm3_0101 0@sint16;
mov ymm3_0110 ymm3_0111;
mov ymm3_0111 0@sint16;
mov ymm3_1000 ymm3_1001;
mov ymm3_1001 0@sint16;
mov ymm3_1010 ymm3_1011;
mov ymm3_1011 0@int16;
mov ymm3_1100 ymm3_1101;
mov ymm3_1101 0@sint16;
mov ymm3_1110 ymm3_1111;
mov ymm3_1111 0@sint16;
(* vpackusdw %ymm8,%ymm7,%ymm7                     #! PC = 0x5555555551f5 *)
assert true && ymm8_0001 = 0@16;
assert true && ymm8_0011 = 0@16;
assert true && ymm8_0101 = 0@16;
assert true && ymm8_0111 = 0@16;
assert true && ymm8_1001 = 0@16;
assert true && ymm8_1011 = 0@16;
assert true && ymm8_1101 = 0@16;
assert true && ymm8_1111 = 0@16;
assert true && ymm7_0001 = 0@16;
assert true && ymm7_0011 = 0@16;
assert true && ymm7_0101 = 0@16;
assert true && ymm7_0111 = 0@16;
assert true && ymm7_1001 = 0@16;
assert true && ymm7_1011 = 0@16;
assert true && ymm7_1101 = 0@16;
assert true && ymm7_1111 = 0@16;
mov tmp_0000 ymm7_0000;
mov tmp_0001 ymm7_0010;
mov tmp_0010 ymm7_0100;
mov tmp_0011 ymm7_0110;
mov tmp_0100 ymm8_0000;
mov tmp_0101 ymm8_0010;
mov tmp_0110 ymm8_0100;
mov tmp_0111 ymm8_0110;
mov tmp_1000 ymm7_1000;
mov tmp_1001 ymm7_1010;
mov tmp_1010 ymm7_1100;
mov tmp_1011 ymm7_1110;
mov tmp_1100 ymm8_1000;
mov tmp_1101 ymm8_1010;
mov tmp_1110 ymm8_1100;
mov tmp_1111 ymm8_1110;
mov ymm7_0000 tmp_0000;
mov ymm7_0001 tmp_0001;
mov ymm7_0010 tmp_0010;
mov ymm7_0011 tmp_0011;
mov ymm7_0100 tmp_0100;
mov ymm7_0101 tmp_0101;
mov ymm7_0110 tmp_0110;
mov ymm7_0111 tmp_0111;
mov ymm7_1000 tmp_1000;
mov ymm7_1001 tmp_1001;
mov ymm7_1010 tmp_1010;
mov ymm7_1011 tmp_1011;
mov ymm7_1100 tmp_1100;
mov ymm7_1101 tmp_1101;
mov ymm7_1110 tmp_1110;
mov ymm7_1111 tmp_1111;
(* vpackusdw %ymm3,%ymm2,%ymm2                     #! PC = 0x5555555551fa *)
assert true && ymm3_0001 = 0@16;
assert true && ymm3_0011 = 0@16;
assert true && ymm3_0101 = 0@16;
assert true && ymm3_0111 = 0@16;
assert true && ymm3_1001 = 0@16;
assert true && ymm3_1011 = 0@16;
assert true && ymm3_1101 = 0@16;
assert true && ymm3_1111 = 0@16;
assert true && ymm2_0001 = 0@16;
assert true && ymm2_0011 = 0@16;
assert true && ymm2_0101 = 0@16;
assert true && ymm2_0111 = 0@16;
assert true && ymm2_1001 = 0@16;
assert true && ymm2_1011 = 0@16;
assert true && ymm2_1101 = 0@16;
assert true && ymm2_1111 = 0@16;
mov tmp_0000 ymm2_0000;
mov tmp_0001 ymm2_0010;
mov tmp_0010 ymm2_0100;
mov tmp_0011 ymm2_0110;
mov tmp_0100 ymm3_0000;
mov tmp_0101 ymm3_0010;
mov tmp_0110 ymm3_0100;
mov tmp_0111 ymm3_0110;
mov tmp_1000 ymm2_1000;
mov tmp_1001 ymm2_1010;
mov tmp_1010 ymm2_1100;
mov tmp_1011 ymm2_1110;
mov tmp_1100 ymm3_1000;
mov tmp_1101 ymm3_1010;
mov tmp_1110 ymm3_1100;
mov tmp_1111 ymm3_1110;
mov ymm2_0000 tmp_0000;
mov ymm2_0001 tmp_0001;
mov ymm2_0010 tmp_0010;
mov ymm2_0011 tmp_0011;
mov ymm2_0100 tmp_0100;
mov ymm2_0101 tmp_0101;
mov ymm2_0110 tmp_0110;
mov ymm2_0111 tmp_0111;
mov ymm2_1000 tmp_1000;
mov ymm2_1001 tmp_1001;
mov ymm2_1010 tmp_1010;
mov ymm2_1011 tmp_1011;
mov ymm2_1100 tmp_1100;
mov ymm2_1101 tmp_1101;
mov ymm2_1110 tmp_1110;
mov ymm2_1111 tmp_1111;
(* vpblendw $0xaa,%ymm6,%ymm4,%ymm3                #! PC = 0x5555555551ff *)
mov ymm3_0000 ymm4_0000;
mov ymm3_0001 ymm6_0001;
mov ymm3_0010 ymm4_0010;
mov ymm3_0011 ymm6_0011;
mov ymm3_0100 ymm4_0100;
mov ymm3_0101 ymm6_0101;
mov ymm3_0110 ymm4_0110;
mov ymm3_0111 ymm6_0111;
mov ymm3_1000 ymm4_1000;
mov ymm3_1001 ymm6_1001;
mov ymm3_1010 ymm4_1010;
mov ymm3_1011 ymm6_1011;
mov ymm3_1100 ymm4_1100;
mov ymm3_1101 ymm6_1101;
mov ymm3_1110 ymm4_1110;
mov ymm3_1111 ymm6_1111;
(* vpblendw $0xaa,%ymm6,%ymm5,%ymm6                #! PC = 0x555555555205 *)
mov ymm6_0000 ymm5_0000;
mov ymm6_0001 ymm6_0001;
mov ymm6_0010 ymm5_0010;
mov ymm6_0011 ymm6_0011;
mov ymm6_0100 ymm5_0100;
mov ymm6_0101 ymm6_0101;
mov ymm6_0110 ymm5_0110;
mov ymm6_0111 ymm6_0111;
mov ymm6_1000 ymm5_1000;
mov ymm6_1001 ymm6_1001;
mov ymm6_1010 ymm5_1010;
mov ymm6_1011 ymm6_1011;
mov ymm6_1100 ymm5_1100;
mov ymm6_1101 ymm6_1101;
mov ymm6_1110 ymm5_1110;
mov ymm6_1111 ymm6_1111;
(* vpsrld $0x10,%ymm4,%ymm4                        #! PC = 0x55555555520b *)
mov ymm4_0000 ymm4_0001;
mov ymm4_0001 0@sint16;
mov ymm4_0010 ymm4_0011;
mov ymm4_0011 0@sint16;
mov ymm4_0100 ymm4_0101;
mov ymm4_0101 0@sint16;
mov ymm4_0110 ymm4_0111;
mov ymm4_0111 0@sint16;
mov ymm4_1000 ymm4_1001;
mov ymm4_1001 0@sint16;
mov ymm4_1010 ymm4_1011;
mov ymm4_1011 0@int16;
mov ymm4_1100 ymm4_1101;
mov ymm4_1101 0@sint16;
mov ymm4_1110 ymm4_1111;
mov ymm4_1111 0@sint16;
(* vpsrld $0x10,%ymm5,%ymm5                        #! PC = 0x555555555210 *)
mov ymm5_0000 ymm5_0001;
mov ymm5_0001 0@sint16;
mov ymm5_0010 ymm5_0011;
mov ymm5_0011 0@sint16;
mov ymm5_0100 ymm5_0101;
mov ymm5_0101 0@sint16;
mov ymm5_0110 ymm5_0111;
mov ymm5_0111 0@sint16;
mov ymm5_1000 ymm5_1001;
mov ymm5_1001 0@sint16;
mov ymm5_1010 ymm5_1011;
mov ymm5_1011 0@int16;
mov ymm5_1100 ymm5_1101;
mov ymm5_1101 0@sint16;
mov ymm5_1110 ymm5_1111;
mov ymm5_1111 0@sint16;
(* vpackusdw %ymm6,%ymm3,%ymm3                     #! PC = 0x555555555215 *)
assert true && ymm6_0001 = 0@16;
assert true && ymm6_0011 = 0@16;
assert true && ymm6_0101 = 0@16;
assert true && ymm6_0111 = 0@16;
assert true && ymm6_1001 = 0@16;
assert true && ymm6_1011 = 0@16;
assert true && ymm6_1101 = 0@16;
assert true && ymm6_1111 = 0@16;
assert true && ymm3_0001 = 0@16;
assert true && ymm3_0011 = 0@16;
assert true && ymm3_0101 = 0@16;
assert true && ymm3_0111 = 0@16;
assert true && ymm3_1001 = 0@16;
assert true && ymm3_1011 = 0@16;
assert true && ymm3_1101 = 0@16;
assert true && ymm3_1111 = 0@16;
mov tmp_0000 ymm3_0000;
mov tmp_0001 ymm3_0010;
mov tmp_0010 ymm3_0100;
mov tmp_0011 ymm3_0110;
mov tmp_0100 ymm6_0000;
mov tmp_0101 ymm6_0010;
mov tmp_0110 ymm6_0100;
mov tmp_0111 ymm6_0110;
mov tmp_1000 ymm3_1000;
mov tmp_1001 ymm3_1010;
mov tmp_1010 ymm3_1100;
mov tmp_1011 ymm3_1110;
mov tmp_1100 ymm6_1000;
mov tmp_1101 ymm6_1010;
mov tmp_1110 ymm6_1100;
mov tmp_1111 ymm6_1110;
mov ymm3_0000 tmp_0000;
mov ymm3_0001 tmp_0001;
mov ymm3_0010 tmp_0010;
mov ymm3_0011 tmp_0011;
mov ymm3_0100 tmp_0100;
mov ymm3_0101 tmp_0101;
mov ymm3_0110 tmp_0110;
mov ymm3_0111 tmp_0111;
mov ymm3_1000 tmp_1000;
mov ymm3_1001 tmp_1001;
mov ymm3_1010 tmp_1010;
mov ymm3_1011 tmp_1011;
mov ymm3_1100 tmp_1100;
mov ymm3_1101 tmp_1101;
mov ymm3_1110 tmp_1110;
mov ymm3_1111 tmp_1111;
(* vpackusdw %ymm5,%ymm4,%ymm4                     #! PC = 0x55555555521a *)
assert true && ymm5_0001 = 0@16;
assert true && ymm5_0011 = 0@16;
assert true && ymm5_0101 = 0@16;
assert true && ymm5_0111 = 0@16;
assert true && ymm5_1001 = 0@16;
assert true && ymm5_1011 = 0@16;
assert true && ymm5_1101 = 0@16;
assert true && ymm5_1111 = 0@16;
assert true && ymm4_0001 = 0@16;
assert true && ymm4_0011 = 0@16;
assert true && ymm4_0101 = 0@16;
assert true && ymm4_0111 = 0@16;
assert true && ymm4_1001 = 0@16;
assert true && ymm4_1011 = 0@16;
assert true && ymm4_1101 = 0@16;
assert true && ymm4_1111 = 0@16;
mov tmp_0000 ymm4_0000;
mov tmp_0001 ymm4_0010;
mov tmp_0010 ymm4_0100;
mov tmp_0011 ymm4_0110;
mov tmp_0100 ymm5_0000;
mov tmp_0101 ymm5_0010;
mov tmp_0110 ymm5_0100;
mov tmp_0111 ymm5_0110;
mov tmp_1000 ymm4_1000;
mov tmp_1001 ymm4_1010;
mov tmp_1010 ymm4_1100;
mov tmp_1011 ymm4_1110;
mov tmp_1100 ymm5_1000;
mov tmp_1101 ymm5_1010;
mov tmp_1110 ymm5_1100;
mov tmp_1111 ymm5_1110;
mov ymm4_0000 tmp_0000;
mov ymm4_0001 tmp_0001;
mov ymm4_0010 tmp_0010;
mov ymm4_0011 tmp_0011;
mov ymm4_0100 tmp_0100;
mov ymm4_0101 tmp_0101;
mov ymm4_0110 tmp_0110;
mov ymm4_0111 tmp_0111;
mov ymm4_1000 tmp_1000;
mov ymm4_1001 tmp_1001;
mov ymm4_1010 tmp_1010;
mov ymm4_1011 tmp_1011;
mov ymm4_1100 tmp_1100;
mov ymm4_1101 tmp_1101;
mov ymm4_1110 tmp_1110;
mov ymm4_1111 tmp_1111;
(* vpmullw %ymm1,%ymm7,%ymm5                       #! PC = 0x55555555521f *)
smull ymm5_0000h ymm5_0000l ymm1_0000 ymm7_0000;
cast ymm5_0000@sint16 ymm5_0000l;
smull ymm5_0001h ymm5_0001l ymm1_0001 ymm7_0001;
cast ymm5_0001@sint16 ymm5_0001l;
smull ymm5_0010h ymm5_0010l ymm1_0010 ymm7_0010;
cast ymm5_0010@sint16 ymm5_0010l;
smull ymm5_0011h ymm5_0011l ymm1_0011 ymm7_0011;
cast ymm5_0011@sint16 ymm5_0011l;
smull ymm5_0100h ymm5_0100l ymm1_0100 ymm7_0100;
cast ymm5_0100@sint16 ymm5_0100l;
smull ymm5_0101h ymm5_0101l ymm1_0101 ymm7_0101;
cast ymm5_0101@sint16 ymm5_0101l;
smull ymm5_0110h ymm5_0110l ymm1_0110 ymm7_0110;
cast ymm5_0110@sint16 ymm5_0110l;
smull ymm5_0111h ymm5_0111l ymm1_0111 ymm7_0111;
cast ymm5_0111@sint16 ymm5_0111l;
smull ymm5_1000h ymm5_1000l ymm1_1000 ymm7_1000;
cast ymm5_1000@sint16 ymm5_1000l;
smull ymm5_1001h ymm5_1001l ymm1_1001 ymm7_1001;
cast ymm5_1001@sint16 ymm5_1001l;
smull ymm5_1010h ymm5_1010l ymm1_1010 ymm7_1010;
cast ymm5_1010@sint16 ymm5_1010l;
smull ymm5_1011h ymm5_1011l ymm1_1011 ymm7_1011;
cast ymm5_1011@sint16 ymm5_1011l;
smull ymm5_1100h ymm5_1100l ymm1_1100 ymm7_1100;
cast ymm5_1100@sint16 ymm5_1100l;
smull ymm5_1101h ymm5_1101l ymm1_1101 ymm7_1101;
cast ymm5_1101@sint16 ymm5_1101l;
smull ymm5_1110h ymm5_1110l ymm1_1110 ymm7_1110;
cast ymm5_1110@sint16 ymm5_1110l;
smull ymm5_1111h ymm5_1111l ymm1_1111 ymm7_1111;
cast ymm5_1111@sint16 ymm5_1111l;
(* vpmullw %ymm1,%ymm3,%ymm1                       #! PC = 0x555555555223 *)
smull ymm1_0000h ymm1_0000l ymm1_0000 ymm3_0000;
cast ymm1_0000@sint16 ymm1_0000l;
smull ymm1_0001h ymm1_0001l ymm1_0001 ymm3_0001;
cast ymm1_0001@sint16 ymm1_0001l;
smull ymm1_0010h ymm1_0010l ymm1_0010 ymm3_0010;
cast ymm1_0010@sint16 ymm1_0010l;
smull ymm1_0011h ymm1_0011l ymm1_0011 ymm3_0011;
cast ymm1_0011@sint16 ymm1_0011l;
smull ymm1_0100h ymm1_0100l ymm1_0100 ymm3_0100;
cast ymm1_0100@sint16 ymm1_0100l;
smull ymm1_0101h ymm1_0101l ymm1_0101 ymm3_0101;
cast ymm1_0101@sint16 ymm1_0101l;
smull ymm1_0110h ymm1_0110l ymm1_0110 ymm3_0110;
cast ymm1_0110@sint16 ymm1_0110l;
smull ymm1_0111h ymm1_0111l ymm1_0111 ymm3_0111;
cast ymm1_0111@sint16 ymm1_0111l;
smull ymm1_1000h ymm1_1000l ymm1_1000 ymm3_1000;
cast ymm1_1000@sint16 ymm1_1000l;
smull ymm1_1001h ymm1_1001l ymm1_1001 ymm3_1001;
cast ymm1_1001@sint16 ymm1_1001l;
smull ymm1_1010h ymm1_1010l ymm1_1010 ymm3_1010;
cast ymm1_1010@sint16 ymm1_1010l;
smull ymm1_1011h ymm1_1011l ymm1_1011 ymm3_1011;
cast ymm1_1011@sint16 ymm1_1011l;
smull ymm1_1100h ymm1_1100l ymm1_1100 ymm3_1100;
cast ymm1_1100@sint16 ymm1_1100l;
smull ymm1_1101h ymm1_1101l ymm1_1101 ymm3_1101;
cast ymm1_1101@sint16 ymm1_1101l;
smull ymm1_1110h ymm1_1110l ymm1_1110 ymm3_1110;
cast ymm1_1110@sint16 ymm1_1110l;
smull ymm1_1111h ymm1_1111l ymm1_1111 ymm3_1111;
cast ymm1_1111@sint16 ymm1_1111l;
(* vpmulhw %ymm0,%ymm5,%ymm3                       #! PC = 0x555555555227 *)
smull ymm3_0000 ymm3_0000L ymm0_0000 ymm5_0000;
smull ymm3_0001 ymm3_0001L ymm0_0001 ymm5_0001;
smull ymm3_0010 ymm3_0010L ymm0_0010 ymm5_0010;
smull ymm3_0011 ymm3_0011L ymm0_0011 ymm5_0011;
smull ymm3_0100 ymm3_0100L ymm0_0100 ymm5_0100;
smull ymm3_0101 ymm3_0101L ymm0_0101 ymm5_0101;
smull ymm3_0110 ymm3_0110L ymm0_0110 ymm5_0110;
smull ymm3_0111 ymm3_0111L ymm0_0111 ymm5_0111;
smull ymm3_1000 ymm3_1000L ymm0_1000 ymm5_1000;
smull ymm3_1001 ymm3_1001L ymm0_1001 ymm5_1001;
smull ymm3_1010 ymm3_1010L ymm0_1010 ymm5_1010;
smull ymm3_1011 ymm3_1011L ymm0_1011 ymm5_1011;
smull ymm3_1100 ymm3_1100L ymm0_1100 ymm5_1100;
smull ymm3_1101 ymm3_1101L ymm0_1101 ymm5_1101;
smull ymm3_1110 ymm3_1110L ymm0_1110 ymm5_1110;
smull ymm3_1111 ymm3_1111L ymm0_1111 ymm5_1111;
(* vpmulhw %ymm0,%ymm1,%ymm0                       #! PC = 0x55555555522b *)
smull ymm0_0000 ymm0_0000L ymm0_0000 ymm1_0000;
smull ymm0_0001 ymm0_0001L ymm0_0001 ymm1_0001;
smull ymm0_0010 ymm0_0010L ymm0_0010 ymm1_0010;
smull ymm0_0011 ymm0_0011L ymm0_0011 ymm1_0011;
smull ymm0_0100 ymm0_0100L ymm0_0100 ymm1_0100;
smull ymm0_0101 ymm0_0101L ymm0_0101 ymm1_0101;
smull ymm0_0110 ymm0_0110L ymm0_0110 ymm1_0110;
smull ymm0_0111 ymm0_0111L ymm0_0111 ymm1_0111;
smull ymm0_1000 ymm0_1000L ymm0_1000 ymm1_1000;
smull ymm0_1001 ymm0_1001L ymm0_1001 ymm1_1001;
smull ymm0_1010 ymm0_1010L ymm0_1010 ymm1_1010;
smull ymm0_1011 ymm0_1011L ymm0_1011 ymm1_1011;
smull ymm0_1100 ymm0_1100L ymm0_1100 ymm1_1100;
smull ymm0_1101 ymm0_1101L ymm0_1101 ymm1_1101;
smull ymm0_1110 ymm0_1110L ymm0_1110 ymm1_1110;
smull ymm0_1111 ymm0_1111L ymm0_1111 ymm1_1111;
(* vpsubw %ymm3,%ymm2,%ymm1                        #! PC = 0x55555555522f *)
subb dc ymm1_0000 ymm2_0000 ymm3_0000;
subb dc ymm1_0001 ymm2_0001 ymm3_0001;
subb dc ymm1_0010 ymm2_0010 ymm3_0010;
subb dc ymm1_0011 ymm2_0011 ymm3_0011;
subb dc ymm1_0100 ymm2_0100 ymm3_0100;
subb dc ymm1_0101 ymm2_0101 ymm3_0101;
subb dc ymm1_0110 ymm2_0110 ymm3_0110;
subb dc ymm1_0111 ymm2_0111 ymm3_0111;
subb dc ymm1_1000 ymm2_1000 ymm3_1000;
subb dc ymm1_1001 ymm2_1001 ymm3_1001;
subb dc ymm1_1010 ymm2_1010 ymm3_1010;
subb dc ymm1_1011 ymm2_1011 ymm3_1011;
subb dc ymm1_1100 ymm2_1100 ymm3_1100;
subb dc ymm1_1101 ymm2_1101 ymm3_1101;
subb dc ymm1_1110 ymm2_1110 ymm3_1110;
subb dc ymm1_1111 ymm2_1111 ymm3_1111;
(* vpsubw %ymm0,%ymm4,%ymm0                        #! PC = 0x555555555233 *)
subb dc ymm0_0000 ymm4_0000 ymm0_0000;
subb dc ymm0_0001 ymm4_0001 ymm0_0001;
subb dc ymm0_0010 ymm4_0010 ymm0_0010;
subb dc ymm0_0011 ymm4_0011 ymm0_0011;
subb dc ymm0_0100 ymm4_0100 ymm0_0100;
subb dc ymm0_0101 ymm4_0101 ymm0_0101;
subb dc ymm0_0110 ymm4_0110 ymm0_0110;
subb dc ymm0_0111 ymm4_0111 ymm0_0111;
subb dc ymm0_1000 ymm4_1000 ymm0_1000;
subb dc ymm0_1001 ymm4_1001 ymm0_1001;
subb dc ymm0_1010 ymm4_1010 ymm0_1010;
subb dc ymm0_1011 ymm4_1011 ymm0_1011;
subb dc ymm0_1100 ymm4_1100 ymm0_1100;
subb dc ymm0_1101 ymm4_1101 ymm0_1101;
subb dc ymm0_1110 ymm4_1110 ymm0_1110;
subb dc ymm0_1111 ymm4_1111 ymm0_1111;
(* vmovdqu %ymm1,(%rdi)                            #! EA = L0x7fffffffd870; PC = 0x555555555237 *)
mov L0x7fffffffd870 ymm1_0000;
mov L0x7fffffffd872 ymm1_0001;
mov L0x7fffffffd874 ymm1_0010;
mov L0x7fffffffd876 ymm1_0011;
mov L0x7fffffffd878 ymm1_0100;
mov L0x7fffffffd87a ymm1_0101;
mov L0x7fffffffd87c ymm1_0110;
mov L0x7fffffffd87e ymm1_0111;
mov L0x7fffffffd880 ymm1_1000;
mov L0x7fffffffd882 ymm1_1001;
mov L0x7fffffffd884 ymm1_1010;
mov L0x7fffffffd886 ymm1_1011;
mov L0x7fffffffd888 ymm1_1100;
mov L0x7fffffffd88a ymm1_1101;
mov L0x7fffffffd88c ymm1_1110;
mov L0x7fffffffd88e ymm1_1111;
(* vmovdqu %ymm0,0x20(%rdi)                        #! EA = L0x7fffffffd890; PC = 0x55555555523b *)
mov L0x7fffffffd890 ymm0_0000;
mov L0x7fffffffd892 ymm0_0001;
mov L0x7fffffffd894 ymm0_0010;
mov L0x7fffffffd896 ymm0_0011;
mov L0x7fffffffd898 ymm0_0100;
mov L0x7fffffffd89a ymm0_0101;
mov L0x7fffffffd89c ymm0_0110;
mov L0x7fffffffd89e ymm0_0111;
mov L0x7fffffffd8a0 ymm0_1000;
mov L0x7fffffffd8a2 ymm0_1001;
mov L0x7fffffffd8a4 ymm0_1010;
mov L0x7fffffffd8a6 ymm0_1011;
mov L0x7fffffffd8a8 ymm0_1100;
mov L0x7fffffffd8aa ymm0_1101;
mov L0x7fffffffd8ac ymm0_1110;
mov L0x7fffffffd8ae ymm0_1111;
(* #! <- SP = 0x7fffffffd868 *)
#! 0x7fffffffd868 = 0x7fffffffd868;
(* #retq                                           #! PC = 0x555555555240 *)
#retq                                           #! 0x555555555240 = 0x555555555240;

{
  true
  &&
  true
}

