inline fn __tobytes4(reg u64[4] f) -> reg u64[4]
{
  reg bool cf;
  reg u64 t;

  t = #LEA(f[3] + f[3]);
  ?{}, f[3] = #SAR(f[3], 63);
  t >>= 1;
  f[3] &= 19;
  f[3] += 19;

  cf, f[0] += f[3];
  cf, f[1] += 0 + cf;
  cf, f[2] += 0 + cf;
   _, t    += 0 + cf;

  f[3] = #LEA(t + t);
  ?{}, t = #SAR(t, 63);
  f[3] >>= 1;
  t = !t;
  t &= 19;

  cf, f[0] -= t;
  cf, f[1] -= 0 - cf;
  cf, f[2] -= 0 - cf;
   _, f[3] -= 0 - cf;

  return f;

}

//

export fn tobytes4(reg u64 rp fp)
{
  inline int i;
  reg u64[4] r f;
  stack u64 rps;

  rps = rp;
  for i=0 to 4
  { f[i] = [fp + 8*i]; }

  f = __tobytes4(f);

  rp = rps;
  for i=0 to 4
  { [rp + 8*i] = f[i]; }
}

